import{_ as d,c as e,o,ah as a}from"./chunks/framework.ArdWB6UD.js";const u=JSON.parse('{"title":"ðŸ“š API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"map/draw/module/index.md","filePath":"map/draw/module/index.md","lastUpdated":null}'),c={name:"map/draw/module/index.md"};function r(l,t,s,n,i,h){return o(),e("div",null,t[0]||(t[0]=[a('<h1 id="ðŸ“š-api-reference" tabindex="-1">ðŸ“š API Reference <a class="header-anchor" href="#ðŸ“š-api-reference" aria-label="Permalink to &quot;ðŸ“š API Reference&quot;">â€‹</a></h1><h2 id="drawcontrol" tabindex="-1">DrawControl <a class="header-anchor" href="#drawcontrol" aria-label="Permalink to &quot;DrawControl&quot;">â€‹</a></h2><h4 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Required</th><th>Default Value</th></tr></thead><tbody><tr><td><code>mapId</code></td><td></td><td><code>string</code></td><td><code>false</code></td><td>--</td></tr><tr><td><code>dragId</code></td><td></td><td><code>string</code></td><td><code>false</code></td><td>--</td></tr><tr><td><code>btnWidth</code></td><td></td><td><code>number</code></td><td><code>false</code></td><td>40</td></tr><tr><td><code>position</code></td><td></td><td><code>&#39;top-left&#39;</code>, <code>&#39;top-right&#39;</code>, <code>&#39;bottom-left&#39;</code>, <code>&#39;bottom-right&#39;</code></td><td><code>false</code></td><td><code>&#39;bottom-right&#39;</code></td></tr><tr><td><code>controlVisible</code></td><td></td><td><code>boolean</code></td><td><code>false</code></td><td><code>true</code></td></tr></tbody></table><p>and</p><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Required</th><th>Default Value</th></tr></thead><tbody><tr><td><code>drawOptions</code></td><td>Drawing options (see below)</td><td><code>DrawOption</code></td><td>false</td><td><code>undefined</code></td></tr></tbody></table><h4 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td>Custom content slot</td></tr></tbody></table><h4 id="usage-notes" tabindex="-1">Usage Notes <a class="header-anchor" href="#usage-notes" aria-label="Permalink to &quot;Usage Notes&quot;">â€‹</a></h4><ul><li>Use inside a <code>&lt;Map&gt;</code> component from <code>@hungpvq/vue-map-core</code>.</li><li>Provide a <code>drawOptions</code> prop to configure supported geometry types and save behavior.</li><li>Emits events for all major draw actions (start, complete, update, delete).</li><li>Supports slot for custom button or UI extension.</li></ul><h2 id="inspectcontrol" tabindex="-1">InspectControl <a class="header-anchor" href="#inspectcontrol" aria-label="Permalink to &quot;InspectControl&quot;">â€‹</a></h2><h4 id="props-1" tabindex="-1">Props <a class="header-anchor" href="#props-1" aria-label="Permalink to &quot;Props&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Required</th><th>Default Value</th></tr></thead><tbody><tr><td><code>mapId</code></td><td></td><td><code>string</code></td><td><code>false</code></td><td>--</td></tr><tr><td><code>dragId</code></td><td></td><td><code>string</code></td><td><code>false</code></td><td>--</td></tr><tr><td><code>btnWidth</code></td><td></td><td><code>number</code></td><td><code>false</code></td><td>40</td></tr><tr><td><code>position</code></td><td></td><td><code>&#39;top-left&#39;</code>, <code>&#39;top-right&#39;</code>, <code>&#39;bottom-left&#39;</code>, <code>&#39;bottom-right&#39;</code></td><td><code>false</code></td><td><code>&#39;bottom-right&#39;</code></td></tr><tr><td><code>controlVisible</code></td><td></td><td><code>boolean</code></td><td><code>false</code></td><td><code>true</code></td></tr></tbody></table><p>and</p><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Required</th><th>Default Value</th></tr></thead><tbody><tr><td><code>showInspectDefault</code></td><td>Show inspect mode by default</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>useInspectStyle</code></td><td>Use inspect style for layers</td><td><code>boolean</code></td><td>false</td><td><code>true</code></td></tr><tr><td><code>showInspectMapPopup</code></td><td>Show popup for inspected features</td><td><code>boolean</code></td><td>false</td><td><code>true</code></td></tr><tr><td><code>showInspectMapPopupOnHover</code></td><td>Show popup on hover</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>showMapPopup</code></td><td>Show generic map popup</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>showMapPopupOnHover</code></td><td>Show map popup on hover</td><td><code>boolean</code></td><td>false</td><td><code>true</code></td></tr><tr><td><code>blockHoverPopupOnClick</code></td><td>Block hover popup on click</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>buildInspectStyle</code></td><td>Custom style builder function</td><td><code>Function</code></td><td>false</td><td><code>generateInspectStyle</code></td></tr><tr><td><code>backgroundColor</code></td><td>Background color for inspect style</td><td><code>string</code></td><td>false</td><td><code>&#39;#fff&#39;</code></td></tr><tr><td><code>assignLayerColor</code></td><td>Function to assign color to layers</td><td><code>Function</code></td><td>false</td><td><code>brightColor</code></td></tr><tr><td><code>renderPopup</code></td><td>Function to render popup content</td><td><code>Function</code></td><td>false</td><td><code>_renderPopup</code></td></tr><tr><td><code>selectThreshold</code></td><td>Pixel threshold for feature selection</td><td><code>number</code></td><td>false</td><td><code>5</code></td></tr><tr><td><code>queryParameters</code></td><td>Parameters for querying rendered features</td><td><code>object</code></td><td>false</td><td><code>() =&gt; ({})</code></td></tr></tbody></table><h4 id="slots-1" tabindex="-1">Slots <a class="header-anchor" href="#slots-1" aria-label="Permalink to &quot;Slots&quot;">â€‹</a></h4><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td>Custom content slot</td></tr></tbody></table><h4 id="usage-notes-1" tabindex="-1">Usage Notes <a class="header-anchor" href="#usage-notes-1" aria-label="Permalink to &quot;Usage Notes&quot;">â€‹</a></h4><ul><li>Use inside a <code>&lt;Map&gt;</code> component from <code>@hungpvq/vue-map-core</code>.</li><li>Useful for debugging and analyzing map layers and features.</li><li>Highly customizable via props for popup rendering and style.</li><li>Supports slot for custom UI extension.</li></ul>',19)]))}const f=d(c,[["render",r]]);export{u as __pageData,f as default};
