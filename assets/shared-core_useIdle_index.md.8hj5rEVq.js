import{d as I}from"./chunks/configurable.DoS0fK6c.js";import{t as x}from"./chunks/index.DFrNueJU.js";import{n as C,t as _}from"./chunks/is.DGW30r2M.js";import{ab as T,s as v,d as P,h as V,D as u,o as A,c as B,I as c,w as b,a as E,j as p,k as j,t as S,F as N,a5 as $}from"./chunks/framework.BN-DpKB1.js";import{u as D}from"./chunks/index.CMn1ZCMO.js";import{u as q}from"./chunks/index.DT6HS2iU.js";import"./chunks/index.CHp6lZsi.js";import"./chunks/index.Bge_AMkj.js";import"./chunks/index.DZ_trk2c.js";import"./chunks/index.CSW-2FrP.js";function O(t,s){function i(...a){return new Promise((e,n)=>{Promise.resolve(t(()=>s.apply(this,a),{fn:s,thisArg:this,args:a})).then(e).catch(n)})}return i}function M(...t){let s=0,i,a=!0,e=C,n,k,l,h,r;!T(t[0])&&typeof t[0]=="object"?{delay:k,trailing:l=!0,leading:h=!0,rejectOnCancel:r=!1}=t[0]:[k,l=!0,h=!0,r=!1]=t;const o=()=>{i&&(clearTimeout(i),i=void 0,e(),e=C)};return g=>{const d=x(k),m=Date.now()-s,F=()=>n=g();return o(),d<=0?(s=Date.now(),F()):(m>d&&(h||!a)?(s=Date.now(),F()):l&&(n=new Promise((f,w)=>{e=r?w:f,i=setTimeout(()=>{s=Date.now(),a=!0,f(F()),o()},Math.max(0,d-m))})),!h&&!i&&(i=setTimeout(()=>a=!0,d)),a=!1,n)}}const R=["mousemove","mousedown","resize","keydown","touchstart","wheel"],U=6e4;function L(t=U,s={}){const{initialState:i=!1,listenForVisibilityChange:a=!0,events:e=R,window:n=I,eventFilter:k=M(50)}=s,l=v(i),h=v(_());let r;const o=()=>{l.value=!1,clearTimeout(r),r=setTimeout(()=>l.value=!0,t)},y=O(k,()=>{h.value=_(),o()});if(n){const g=n.document;for(const d of e)D(n,d,y,{passive:!0});a&&D(g,"visibilitychange",()=>{g.hidden||y()}),o()}return{idle:l,lastActive:h,reset:o}}const W=p("b",null,"5s",-1),z={class:"mb-2"},J={class:"text-primary"},G=P({__name:"demo",setup(t){const{idle:s,lastActive:i}=L(5e3),a=q({interval:1e3}),e=V(()=>Math.floor((a.value-i.value)/1e3));return(n,k)=>{const l=u("note"),h=u("BooleanDisplay");return A(),B(N,null,[c(l,{class:"mb-2"},{default:b(()=>[E(" For demonstration purpose, the idle timeout is set to "),W,E(" in this demo (default 1min). ")]),_:1}),p("div",z,[E("Idle: "),c(h,{value:j(s)},null,8,["value"])]),p("div",null,[E(" Inactive: "),p("b",J,S(e.value)+"s",1)])],64)}}}),H=p("h1",{id:"useidle",tabindex:"-1"},[E("useIdle "),p("a",{class:"header-anchor",href:"#useidle","aria-label":'Permalink to "useIdle"'},"​")],-1),K=p("p",null,"Tracks whether the user is being inactive.",-1),Q=p("h2",{id:"demo",tabindex:"-1"},[E("Demo "),p("a",{class:"header-anchor",href:"#demo","aria-label":'Permalink to "Demo"'},"​")],-1),X=$(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useIdle } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/shared-core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">idle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lastActive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useIdle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5 min</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(idle.value); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true or false</span></span></code></pre></div><p>Programatically resetting:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { watch } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useCounter, useIdle } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/shared-core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useCounter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">idle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lastActive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useIdle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5 min</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">watch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(idle, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">idleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (idleValue) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    inc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Triggered \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} times\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// restarts the idle timer. Does not change lastActive value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,4),ks=JSON.parse('{"title":"useIdle","description":"","frontmatter":{"category":"Sensors"},"headers":[],"relativePath":"shared-core/useIdle/index.md","filePath":"libs/shared-core/src/useIdle/index.md","lastUpdated":1718546463000}'),Y={name:"shared-core/useIdle/index.md"},rs=Object.assign(Y,{setup(t){return(s,i)=>{const a=u("FunctionInfo"),e=u("DemoContainer");return A(),B("div",null,[H,c(a,{frontmatter:s.$frontmatter,package:"Share - Core",fn:"useIntersectionObserver"},null,8,["frontmatter"]),K,Q,c(e,null,{default:b(()=>[c(G)]),_:1}),X])}}});export{ks as __pageData,rs as default};
