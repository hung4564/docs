import{d as _}from"./chunks/configurable.DoS0fK6c.js";import{t as b}from"./chunks/index.rxAxMNzT.js";import{i as x}from"./chunks/index.CohgC9OM.js";import{u as g}from"./chunks/index.DqIdKUCQ.js";import{h as C,d as w,s as q,D as v,o as D,c as A,j as t,t as m,k as e,a as h,I as l,w as T,a5 as S}from"./chunks/framework.CTGY6mxV.js";import"./chunks/is.DGW30r2M.js";import"./chunks/index.8yTjE-xb.js";import"./chunks/index.I-Cz6Flr.js";const B={sm:640,md:768,lg:1024,xl:1280,"2xl":1536};function V(o,i={}){function n(s,a){let p=b(o[b(s)]);return a!=null&&(p=x(p,a)),typeof p=="number"&&(p=`${p}px`),p}const{window:d=_,strategy:E="min-width"}=i;function r(s){return d?d.matchMedia(s).matches:!1}const c=s=>g(()=>`(min-width: ${n(s)})`,i),u=s=>g(()=>`(max-width: ${n(s)})`,i),F=Object.keys(o).reduce((s,a)=>(Object.defineProperty(s,a,{get:()=>E==="min-width"?c(a):u(a),enumerable:!0,configurable:!0}),s),{});function y(){const s=Object.keys(o).map(a=>[a,c(a)]);return C(()=>s.filter(([,a])=>a.value).map(([a])=>a))}return Object.assign(F,{greaterOrEqual:c,smallerOrEqual:u,greater(s){return g(()=>`(min-width: ${n(s,.1)})`,i)},smaller(s){return g(()=>`(max-width: ${n(s,-.1)})`,i)},between(s,a){return g(()=>`(min-width: ${n(s)}) and (max-width: ${n(a,-.1)})`,i)},isGreater(s){return r(`(min-width: ${n(s,.1)})`)},isGreaterOrEqual(s){return r(`(min-width: ${n(s)})`)},isSmaller(s){return r(`(max-width: ${n(s,-.1)})`)},isSmallerOrEqual(s){return r(`(max-width: ${n(s)})`)},isInBetween(s,a){return r(`(min-width: ${n(s)}) and (max-width: ${n(a,-.1)})`)},current:y,active(){const s=y();return C(()=>s.value.length===0?"":s.value[s.value.length-1])}})}const $={class:"font-mono"},O=w({__name:"demo",setup(o){const i=V(B),n=B.sm,d=q("sm"),E=i.greaterOrEqual(()=>d.value),r=i.current(),c=i.active(),u=i.smaller("sm"),F=i.smallerOrEqual("sm"),y=i.between("sm","md"),s=i.between("md","lg"),a=i.between("lg","xl"),p=i.between("xl","2xl"),f=i["2xl"];return(U,G)=>{const k=v("BooleanDisplay");return D(),A("div",$,[t("div",null,"Current breakpoints: "+m(e(r)),1),t("div",null,"Active breakpoint: "+m(e(c)),1),t("div",null,[h("xs(<"+m(e(n))+"px): ",1),l(k,{value:e(u)},null,8,["value"])]),t("div",null,[h("xs(<="+m(e(n))+"px): ",1),l(k,{value:e(F)},null,8,["value"])]),t("div",null,[h("sm: "),l(k,{value:e(y)},null,8,["value"])]),t("div",null,[h("md: "),l(k,{value:e(s)},null,8,["value"])]),t("div",null,[h("lg: "),l(k,{value:e(a)},null,8,["value"])]),t("div",null,[h("xl: "),l(k,{value:e(p)},null,8,["value"])]),t("div",null,[h("2xl: "),l(k,{value:e(f)},null,8,["value"])]),t("div",null,[h(" greaterThanBreakPoint: "),l(k,{value:e(E)},null,8,["value"])])])}}}),P=t("h1",{id:"usebreakpoints",tabindex:"-1"},[h("useBreakpoints "),t("a",{class:"header-anchor",href:"#usebreakpoints","aria-label":'Permalink to "useBreakpoints"'},"​")],-1),j=t("p",null,"Reactive viewport breakpoints.",-1),I=t("h2",{id:"demo",tabindex:"-1"},[h("Demo "),t("a",{class:"header-anchor",href:"#demo","aria-label":'Permalink to "Demo"'},"​")],-1),N=S(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { breakpointsTailwind, useBreakpoints } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/shared-core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> breakpoints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useBreakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(breakpointsTailwind);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> smAndLarger</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">greaterOrEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// sm and larger</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> largerThanSm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">greater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// only larger than sm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lgAndSmaller</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">smallerOrEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;lg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// lg and smaller</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> smallerThanLg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">smaller</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;lg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// only smaller than lg</span></span></code></pre></div><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useBreakpoints } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/shared-core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> breakpoints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useBreakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mobile: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// optional</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tablet: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">640</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  laptop: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  desktop: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1280</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Can be &#39;mobile&#39; or &#39;tablet&#39; or &#39;laptop&#39; or &#39;desktop&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> activeBreakpoint</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true or false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> laptop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> breakpoints.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;laptop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;desktop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">activeBreakpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="presets" tabindex="-1">Presets <a class="header-anchor" href="#presets" aria-label="Permalink to &quot;Presets&quot;">​</a></h2><ul><li>Tailwind: <code>breakpointsTailwind</code></li><li>Bootstrap v5: <code>breakpointsBootstrapV5</code></li><li>Vuetify v2: <code>breakpointsVuetifyV2</code> (deprecated: <code>breakpointsVuetify</code>)</li><li>Vuetify v3: <code>breakpointsVuetifyV3</code></li><li>Ant Design: <code>breakpointsAntDesign</code></li><li>Quasar v2: <code>breakpointsQuasar</code></li><li>Sematic: <code>breakpointsSematic</code></li><li>Master CSS: <code>breakpointsMasterCss</code></li><li>Prime Flex: <code>breakpointsPrimeFlex</code></li></ul><p><em>Breakpoint presets are deliberately not auto-imported. They have to be explicitly imported:</em></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { breakpointsTailwind } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/shared-core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// and so on</span></span></code></pre></div>`,7),X=JSON.parse('{"title":"useBreakpoints","description":"","frontmatter":{"category":"Browser"},"headers":[],"relativePath":"shared-core/useBreakpoints/index.md","filePath":"libs/shared-core/src/useBreakpoints/index.md","lastUpdated":1718540219000}'),M={name:"shared-core/useBreakpoints/index.md"},Y=Object.assign(M,{setup(o){return(i,n)=>{const d=v("FunctionInfo"),E=v("DemoContainer");return D(),A("div",null,[P,l(d,{fn:"useBreakpoints",frontmatter:i.$frontmatter,package:"Share - Core"},null,8,["frontmatter"]),j,I,l(E,null,{default:T(()=>[l(O)]),_:1}),N])}}});export{X as __pageData,Y as default};
