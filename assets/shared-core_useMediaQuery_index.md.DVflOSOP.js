import{j as c}from"./chunks/configurable.DoS0fK6c.js";import{u as o}from"./chunks/index.kDScw5hp.js";import{d as k,h as u,o as l,c as d,t as m,ac as _,D as h,I as t,w as g,j as e,a as s,a5 as y}from"./chunks/framework.BN-DpKB1.js";import"./chunks/is.DGW30r2M.js";import"./chunks/index.CHp6lZsi.js";import"./chunks/index.DFrNueJU.js";import"./chunks/index.CDblAx5j.js";const f={lang:"json"},E=k({__name:"demo",setup(p){const a=o("(min-width: 1024px)"),r=o("(prefers-color-scheme: dark)"),i=u(()=>c.dump(_({isLargeScreen:a,prefersDark:r})));return(n,M)=>(l(),d("pre",f,m(i.value),1))}}),F=e("h1",{id:"usemediaquery",tabindex:"-1"},[s("useMediaQuery "),e("a",{class:"header-anchor",href:"#usemediaquery","aria-label":'Permalink to "useMediaQuery"'},"​")],-1),C=e("p",null,[s("Reactive "),e("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries",target:"_blank",rel:"noreferrer"},"Media Query"),s(". Once you've created a MediaQueryList object, you can check the result of the query or receive notifications when the result changes.")],-1),b=e("h2",{id:"demo",tabindex:"-1"},[s("Demo "),e("a",{class:"header-anchor",href:"#demo","aria-label":'Permalink to "Demo"'},"​")],-1),D=y(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useMediaQuery } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/shared-core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isLargeScreen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useMediaQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;(min-width: 1024px)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isPreferredDark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useMediaQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;(prefers-color-scheme: dark)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,2),T=JSON.parse('{"title":"useMediaQuery","description":"","frontmatter":{"category":"Browser"},"headers":[],"relativePath":"shared-core/useMediaQuery/index.md","filePath":"libs/shared-core/src/useMediaQuery/index.md","lastUpdated":1718546463000}'),v={name:"shared-core/useMediaQuery/index.md"},q=Object.assign(v,{setup(p){return(a,r)=>{const i=h("FunctionInfo"),n=h("DemoContainer");return l(),d("div",null,[F,t(i,{fn:"useMediaQuery",frontmatter:a.$frontmatter,package:"Share - Core"},null,8,["frontmatter"]),C,b,t(n,null,{default:g(()=>[t(E)]),_:1}),D])}}});export{T as __pageData,q as default};
