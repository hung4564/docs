import{_ as e,c as d,o as s,ah as a}from"./chunks/framework.ArdWB6UD.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"map/draw/module/InspectControl.md","filePath":"map/draw/module/InspectControl.md","lastUpdated":null}'),i={name:"map/draw/module/InspectControl.md"};function o(n,t,l,r,p,c){return s(),d("div",null,t[0]||(t[0]=[a(`<h2 id="inspectcontrol" tabindex="-1">InspectControl <a class="header-anchor" href="#inspectcontrol" aria-label="Permalink to &quot;InspectControl&quot;">​</a></h2><h4 id="usecase" tabindex="-1">Usecase <a class="header-anchor" href="#usecase" aria-label="Permalink to &quot;Usecase&quot;">​</a></h4><ul><li>Inspect rendered features for debugging data and styles.</li><li>Provide quick identify functionality without building a full query UI.</li></ul><h4 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Required</th><th>Default Value</th></tr></thead><tbody><tr><td><code>mapId</code></td><td></td><td><code>string</code></td><td><code>false</code></td><td>--</td></tr><tr><td><code>dragId</code></td><td></td><td><code>string</code></td><td><code>false</code></td><td>--</td></tr><tr><td><code>btnWidth</code></td><td></td><td><code>number</code></td><td><code>false</code></td><td>40</td></tr><tr><td><code>position</code></td><td></td><td><code>&#39;top-left&#39;</code>, <code>&#39;top-right&#39;</code>, <code>&#39;bottom-left&#39;</code>, <code>&#39;bottom-right&#39;</code></td><td><code>false</code></td><td><code>&#39;bottom-right&#39;</code></td></tr><tr><td><code>controlVisible</code></td><td></td><td><code>boolean</code></td><td><code>false</code></td><td><code>true</code></td></tr></tbody></table><p>and</p><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Required</th><th>Default Value</th></tr></thead><tbody><tr><td><code>showInspectDefault</code></td><td>Show inspect mode by default</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>useInspectStyle</code></td><td>Use inspect style for layers</td><td><code>boolean</code></td><td>false</td><td><code>true</code></td></tr><tr><td><code>showInspectMapPopup</code></td><td>Show popup for inspected features</td><td><code>boolean</code></td><td>false</td><td><code>true</code></td></tr><tr><td><code>showInspectMapPopupOnHover</code></td><td>Show popup on hover</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>showMapPopup</code></td><td>Show generic map popup</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>showMapPopupOnHover</code></td><td>Show map popup on hover</td><td><code>boolean</code></td><td>false</td><td><code>true</code></td></tr><tr><td><code>blockHoverPopupOnClick</code></td><td>Block hover popup on click</td><td><code>boolean</code></td><td>false</td><td><code>false</code></td></tr><tr><td><code>buildInspectStyle</code></td><td>Custom style builder function</td><td><code>Function</code></td><td>false</td><td><code>generateInspectStyle</code></td></tr><tr><td><code>backgroundColor</code></td><td>Background color for inspect style</td><td><code>string</code></td><td>false</td><td><code>&#39;#fff&#39;</code></td></tr><tr><td><code>assignLayerColor</code></td><td>Function to assign color to layers</td><td><code>Function</code></td><td>false</td><td><code>brightColor</code></td></tr><tr><td><code>renderPopup</code></td><td>Function to render popup content</td><td><code>Function</code></td><td>false</td><td><code>_renderPopup</code></td></tr><tr><td><code>selectThreshold</code></td><td>Pixel threshold for feature selection</td><td><code>number</code></td><td>false</td><td><code>5</code></td></tr><tr><td><code>queryParameters</code></td><td>Parameters for querying rendered features</td><td><code>object</code></td><td>false</td><td><code>() =&gt; ({})</code></td></tr></tbody></table><h4 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td>Custom content slot</td></tr></tbody></table><h4 id="usage-notes" tabindex="-1">Usage Notes <a class="header-anchor" href="#usage-notes" aria-label="Permalink to &quot;Usage Notes&quot;">​</a></h4><ul><li>Use inside a <code>&lt;Map&gt;</code> component from <code>@hungpvq/vue-map-core</code>.</li><li>Useful for debugging and analyzing map layers and features.</li><li>Highly customizable via props for popup rendering and style.</li><li>Supports slot for custom UI extension.</li></ul><h4 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h4><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Map } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/vue-map-core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { InspectControl } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/vue-map-draw&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/vue-map-core/style.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@hungpvq/vue-map-draw/style.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">InspectControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,13)]))}const u=e(i,[["render",o]]);export{k as __pageData,u as default};
